**************************************************************************
*                      3.0.0-beta BREAKING CHANGES                       *
**************************************************************************

Release Date     : 2014-11-04
Current Version  : 3.0.0-beta

If you find any new breaking changes, please report in the Ext.NET Community
forums: http://forums.ext.net.

The [EXTJS] or [EXTNET] tag indicates origin framework of the Breaking Change.

For [EXTJS] related changes, the Ext JS 5 Upgrade Guide should be reviewed:
    
    http://docs.sencha.com/extjs/5.0/whats_new/5.0/extjs_upgrade_guide.html


1.  [EXTJS] Support for Internet Explorer 6 and Internet Explorer 7 has been dropped.

2.  [EXTJS] Now there is now no possibility to change a Theme without a full page reload. JavaScript files for each theme must be reloaded. 
    
    Those JavaScript files override properties that cannot be changed on the fly.

3.  [EXTJS] The AbsractComponent's .Margins property has been removed. Please use .Margin or .MarginSpec property.

    The .DefaultMargins property of BoxLayoutConfig, HBoxLayoutConfig, VBoxLayoutConfig, FitLayoutConfig has been removed. Please use a .Defaults inner property of the container itself or the .Margin/.MarginSpec properties of its children.

4.  [EXTJS] The ScriptMode's "Development" option has been removed. Please use "Debug" for development and "Release" for production.

5.  [EXTJS] The TriggerField class has been removed. Please use a regular TextField and its .Triggers property.

6.  [EXTJS] The AbstractComponent's SetDocked() method has been renamed to SetDock().

7.  [EXTJS] The AbstractComponent's DoComponentLayout() method has been removed. Please use UpdateLayout() instead.

8.  [EXTJS] The Model's .IDGen property has been renamed to .Identifier.

9.  [EXTJS] The ModelProxy's Destroy() method has been renamed to Erase().

10. [EXTJS] The Model's .Validations property has been renamed to .Validators.

11. [EXTJS] The ModelProxy's SetDirty() method has been removed. Now status should be changed by developer.

12. [EXTJS] The NodeProxy's Destroy() method has been renamed to Erase().

13. [EXTJS] The TreeStore's SetRootNode() method has been renamed to SetRoot().

14. [EXTJS] The AbstractReader's (i.e. in subclasses like JsonReader as well), JsonWriter's and MetaConfig's .Root property has been renamed to .RootProperty.

15. [EXTJS] The AbstractReader's .IDProperty has been removed. It affects any subclasses like JsonReader. Please use a Model's .IDProperty.

16. [EXTJS] The AbstractWriter's .WriteAllFields default true value has been changed to false. It affects all inheritors - JsonWriter and XmlWriter.

17. [EXTJS] The Layer's .Shim property has been removed. This setting should not be needed anymore.

18. [EXTJS] The Labelable's .ClearCls property has been removed. There is no the clearing div anymore. It means that you can just remove this configuration property.

19. [EXTJS] The TextArea's .Cols and .Rows properties have been removed. Please use CSS or set manually those HTML attributes.

20. [EXTJS] The ColumnBase's .Wrap property has been renamed to .CellWrap.

21. [EXTJS] The BufferedRenderer's .VariableRowHeight property has been removed. Now it is configured for Columns.

22. [EXTJS] The TreeStore's Listeners and DirectEvents:

    Append, BeforeAppend, BeforeCollapse, BeforeExpand, BeforeInsert, BeforeMove, BeforeRemove, Collapse, Expand, Insert, Remove, Sort

    have been prefixed with "Node": NodeAppend, NodeBeforeAppend, NodeBeforeCollapse, etc.

23. [EXTJS] The ColumnBase class inherits from the AbstractContainer now, instead of ComponentBase. 
    
    The .HeaderItems property has been removed. Please use .Items.

24. [EXTJS] The AbstractValidation class has been renamed to Validator. 
    
    Also:
    EmailValidation      => EmailValidator
    ExclusionValidation  => ExclusionValidator
    FormatValidattion    => FormatValidator
    InclusionValidation  => InclusionValidator
    LengthValidation     => LengthValidator
    PresenceValidation   => PresenceValidator
    ValidationCollection => ValidatorCollection

25. [EXTJS] The AbstractStore's Groupers has been renamed to Grouper and the DataSorterCollection type has been changed to DataSorter.

    Here is an explanation from Ext JS team (http://docs.sencha.com/extjs/5.0/whats_new/5.0/extjs_upgrade_guide.html):

    Support for multiple grouping levels was never realized in Ext JS 4 and groupers was really nothing more than extra sorters. 
    This has been replaced by the “grouper” config and the getGroupString method that was previously configured on Store is now configured on the grouper. 
    The internal structures are now much closer to being able to support nested groupers and this config will most likely be restored when that functionality is available.

26. [EXTJS] The StoreBase's GuaranteeRange() method has been removed as deprecated. Please use the GetRange() method with options or callback parameters.

27. [EXTJS] The GridFilters feature has became a plugin. Please add it to <Plugins> instead of <Features>.

    The GridFilters's Filters property has been removed. Now filters are configured for Columns. Please use a Column's Filter property. Also no need to set a DataIndex for a Filter. It comes automatically from a Column owning the Filter.

    The internal structure of GridFilters has been changed a lot on the ExtJS side. It led to removing of the GridFilter's GetSerialArgs, GetValue, SetValueFunc, ValidateRecord properties.
    There is no a direct substitution for those properties. So, if you cannot get something working that has been working with Ext.NET v2, please ask via the Ext.NET forums and we will try to help.

    The GridFilter's .MenuItems property has been removed. Please use the .MenuDefaults's Items of the GridFilter.

    The ListFilter's .MenuConfig has been removed. Please use its .MenuDefaults property.

    The NumericFilter has been renamed to NumberFilter. Also, FilterType's Numeric to Number.

    The GridFilters plugin's FilterUpdate and the filters' (StringFilter, ListFilter, etc.) Update event have been removed. 
    Please use the Store's FilterChange event.
    
    The filters' (StringFilter, ListFilter) Activate and Deactivate events don't fire. That is a bug/omission in ExtJS 5.
    https://github.com/extnet/Ext.NET.Pro/issues/544    

    The GridFilters' .UpdateBuffer property has been removed. Please configure it for a Column's Filter.

    The GridFilter's Serialize event has been removed. Now serialization is done on the level of a Store's filters.
    
    The GridFilters' .AutoReload property has been removed. If needed you can prevent reloading by returning false from a Store's BeforeLoad listener.

    The GridFilters' Local property has been removed. Please use a Store's RemoteFilter property: 
    http://docs.sencha.com/extjs/5.0/apidocs/#!/api/Ext.data.AbstractStore-cfg-remoteFilter

    The GridFilters' ParamPrefix property has been removed. Please use a proxy's (e.g. AjaxProxy) FilterParam:
    http://docs.sencha.com/extjs/5.0/apidocs/#!/api/Ext.data.proxy.Server-cfg-filterParam

    The FilterConditions class: 
    
        - StringFilter's Comparison has been changed from Comparison.Eq to Comparison.Like;
        - ListFilter's Comparison has been changed from Comparison.Eq to Comparison.In.

28. [EXTJS] The ButtonBase's .MenuArrow property has been renamed to .ArrowVisible.

29. [EXTNET] The HyperLink class has been renamed to Hyperlink (notice lowercase "l").
    The LinkButton class has been renamed to HyperlinkButton (notice lowercase "l").

30. [EXTNET] There is no "parentAutoLoadControl" global variable anymore. If you need it back, please use the Loader's .ParentRef property.

    <Loader runat="server" Mode="Frame" Url="Child.aspx" ParentRef="parentAutoLoadControl" />

    The .ParentRef property is only applicable with Mode="Frame". 
    If ParentRef is a non-empty string, when Ext.NET tries (if the iframe doesn't restrict access) to save a reference to the parent Ext.NET control that loads the iframe as a global variable.
    For example, setting ParentRef="parentExtNetControl" means that inside the iframe page you should be able to access the Ext.NET parent control by "window.parentExtNetControl" reference. Again only if the iframe doesn't restrict access.
    If you set ParentRef, you should ensure that the same global variable name is not used inside the iframe. It will be overridden and it is under the developer's responsibility who uses the ParentRef property.

31. [EXTNET] Support for ASP.NET MVC 3 has been removed.

32. [EXTJS] ExtJS 5 introduced a new, high performance, touch-optimized charts package. This brings lots of new capabilities, as well as great performance on tablet devices.
    The legacy ExtJS 4 charts has been removed in Ext.NET v3. For details on upgrading to the new Charts, see the Charts Guide.
    http://docs-origin.sencha.com/extjs/5.0/whats_new/5.0/charts_upgrade_guide.html

    While the new charting package has many similarities with the legacy charts, users should expect to find API differences.

    Also we recommend to review the Ext.NET Charts examples:
    http://examples.ext.net/

33. [EXTJS] The Draw package has been heavily reworked in ExtJS 5, which has led to breaking changes. For example, the DrawComponent has been renamed to DrawContainer.

    Unfortunately, we don't have a thorough guide demonstrating how to upgrade to the new Draw API. We suggest to review the ExtJS Draw guide and review the Ext.NET Draw samples in the Examples Explorer.
    http://docs-origin.sencha.com/extjs/5.0/core_concepts/drawing.html
    http://examples.ext.net/ or http://examples3.ext.net

    As well, some Draw functionality is missing from ExtJS 5 when compared to ExtJS 4. More information is available within the following Issue:
    https://github.com/extnet/Ext.NET.Pro/issues/583